---
import { getCollection } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import ForceGraph from "../components/ForceGraph";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const posts = (await getCollection("notes")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

let nodes: { id: string; name: string }[] = [];
let links: { source: string; target: string }[] = [];

const wikilinkRegExp = /\[\[\s?([^\[\]\|\n\r]+)(\|[^\[\]\|\n\r]+)?\s?\]\]/g;

posts.map((post) => {
  nodes.push({ id: post.slug, name: post.data.title });

  (post.body.match(wikilinkRegExp) || []).map((slug) => {
    const newSlug = slug
      .slice(2, -2)
      .split("|")[0]
      .replace(/.(md|markdown)\s?$/i, "")
      .trim();

    if (newSlug) {
      links.push({
        source: post.slug,
        target: newSlug,
      });
    }
  });
});
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <ViewTransitions />

    <style>
      main {
        position: relative;
        width: 720px;
        max-width: calc(100% - 2em);
        margin: 33vh auto auto;
        background: #ffffff;
        z-index: 2;
        border-radius: 0.5rem;
        box-shadow:
          rgba(184, 194, 215, 0.25) 0px 4px 6px,
          rgba(184, 194, 215, 0.1) 0px 5px 7px;
      }
    </style>
  </head>

  <body>
    <Header />
    <ForceGraph
      data={{ nodes, links }}
      client:only="react"
      transition:persist
    />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>
